from sklearn.datasets import load_wine
import matplotlib.pyplot as plt
from tensorflow import keras

# load data
wineData = load_wine()
x=wineData.data
y=wineData.target

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(x, y, test_size=0.2, random_state=42)


#DNN
model_DNN=keras.models.Sequential()

#Hidden layer definitions
model_DNN.add(keras.layers.Dense(units=12, activation='relu', input_shape = X_train.shape[1:]))
model_DNN.add(keras.layers.Dense(units=10, activation='relu'))
model_DNN.add(keras.layers.Dropout(0.5))
model_DNN.add(keras.layers.Dense(units=8, activation='relu' ))
model_DNN.add(keras.layers.Dropout(0.5))
model_DNN.add(keras.layers.Dense(units=6, activation='relu' ))
#OP layer
model_DNN.add(keras.layers.Dense(units=3, activation='sigmoid' ))
model_DNN.summary()

#compile
model_DNN.compile(loss='sparse_categorical_crossentropy' , optimizer='adam' , metrics=['accuracy'])

#fit
model_DNN.fit(x=X_train, y=Y_train, validation_split=0.1, epochs=2, batch_size=16)

testloss,testaccuracy= model_DNN.evaluate(X_test, Y_test)
print('test loss : ', testloss)
print('test accuracy :', testaccuracy)
